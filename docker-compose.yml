services:
  db:
    image: postgres
    restart: always
    volumes:
      - ./server/data:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: magic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - 5432:5432
    
    networks:
      - app-network

  # pgadmin4:
  #   image: elestio/pgadmin
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@ya.ru
  #     PGADMIN_DEFAULT_PASSWORD: pgadmin
  #     PGADMIN_LISTEN_PORT: 8080
  #   depends_on:
  #     - db
  #   ports:
  #       - 8080:8080
  #   networks:
  #     - app-network

  redis:
    image: redis:latest
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: password
      REDIS_USER: redis
      REDIS_USER_PASSWORD: password
    ports:
      - 6379:6379
    networks:
      - app-network

  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - NODE_PATH=/server/node_modules/@prisma/client
    env_file:
      - ./server/.env
    ports:
      - 3000:3000
    networks:
      - app-network

  client:
    build: 
      context: .
      dockerfile: ./client/Dockerfile
    depends_on:
      server:
        condition: service_started
    ports:
      - 4173:4173
    networks:
      - app-network

  nginx:
    container_name: proxy_nginx
    depends_on:
      - server
      - db
      - redis
      - client
    image: nginx:latest
    ports:
      - 80:80
    env_file:
      - ./server/.env
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./client/dist:/var/www/dist
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge